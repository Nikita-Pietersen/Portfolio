{"version":3,"sources":["Images/profileImage.jpg","Images/Game.jpg","Images/Weather App.jpg","Images/Shop.jpg","Components/about.js","Components/head.js","Components/proj.js","Components/education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Header","id","src","require","Proj","href","Edu","App","className","to","activeStyle","display","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,+GCiC5BC,MA/Bf,WACI,OACI,6BACA,wCACH,iJACgH,6BADhH,kEAE4D,6BAF5D,kGAG4F,6BAH5F,8IAIwI,6BAJxI,oFAK8E,6BAL9E,2FAMqF,6BANrF,wDAOkD,6BAPlD,sFAQgF,6BARhF,qFAS+E,6BAC5E,6BAVH,2BAYG,4BACI,6CACA,8CACA,wCACA,8CACA,+CACA,2CACA,gDCbGC,MAVf,WACI,OACI,yBAAKC,GAAG,QAAR,0BAC2B,6BAD3B,+DAEgE,6BAC5D,yBAAKA,GAAG,QAAQC,IAAMC,EAAQ,QCS3BC,MAdf,WACI,OACI,2FACwD,6BADxD,wDAEyD,6BACrD,6BACA,6BACA,uBAAGC,KAAK,kDAAiD,yBAAKH,IAAMC,EAAQ,OAC5E,uBAAGE,KAAK,mDAAkD,yBAAKH,IAAMC,EAAQ,OAC7E,uBAAGE,KAAK,mDAAkD,yBAAKH,IAAMC,EAAQ,SCc1EG,MAvBf,WACI,OACI,iEACqC,6BADrC,+BAEgC,6BAC5B,6BAHJ,YAKI,4BACI,iDACA,qDACA,mEACA,6CACA,gDACA,iDACA,uDAEJ,6BAAS,6BAdb,0G,MCqDOC,MAjDf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,yBAAKP,GAAG,UACN,kBAAC,EAAD,MACA,yBAAKO,UAAU,iDACb,wBAAIA,UAAU,sBACZ,4BACE,kBAAC,IAAD,CACEC,GAAG,SACHD,UAAU,WACVE,YAAa,CAAEC,QAAS,SAH1B,aAQA,4BACA,kBAAC,IAAD,CACEF,GAAG,OACHD,UAAU,WACVE,YAAa,CAAEC,QAAS,SAH1B,cAQF,4BACE,kBAAC,IAAD,CACEF,GAAG,QACHD,UAAU,WACVE,YAAa,CAAEC,QAAS,SAH1B,eAUN,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWd,IAChC,kBAAC,IAAD,CAAOa,KAAK,OAAOC,UAAWP,IAC9B,kBAAC,IAAD,CAAOM,KAAK,QAAQC,UAAWT,SCrCvBU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.57212de7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileImage.f48fa7c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Game.9ec5f6f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Weather App.3e4f5ace.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Shop.1e1ad4ae.jpg\";","import React from \"react\";\r\n\r\nfunction About(){\r\n    return(\r\n        <div>\r\n        <h2>About Me</h2>\r\n\t    <p>\r\n\t\tMy name is Nikita Pietersen. I am a 19 year old female that matricualted from Rylands High School in the year 2018.<br></br>\r\n\t\tMy hobbies include reading, gaming, playing sports and coding. <br></br>\r\n\t\tMy aspirations are to become a web developer and in the next 5 years to be a senior  developer.<br></br>\r\n\t\tIf I am unable to become a senior developer in five years, I'd still work towards that goal as it is an important goal I've set for myself.<br></br>\r\n\t\tI enjoy learning new langugaes and the fun ways that I am able to implement them.<br></br>\r\n\t\tI enjoy designing web pages and making the pages look lively and aesthetically pleasing.<br></br>\r\n\t\tMy favourites languages are HTML, CSS and Javascript.<br></br>\r\n\t\tI favour challenges that I know will require dedication and proper time management.<br></br>\r\n\t\tI am the type of person that will push myself to learn as much as I can as I work.<br></br>\r\n        <br></br>\r\n        My soft skills include :\r\n        <ul>\r\n            <li>Communication</li>\r\n            <li>Self-Motivated</li>\r\n            <li>Teamwork</li>\r\n            <li>Responsibility</li>\r\n            <li>Problem Solving</li>\r\n            <li>Flexibility</li>\r\n            <li>Adaptability</li>\r\n        </ul>\r\n\t    </p>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nfunction Header(){\r\n    return(\r\n        <div id=\"head\">\r\n            Nikita Nicole Pietersen<br></br>\r\n            Here you'll find out about me, my projects and my education.<br></br>\r\n            <img id=\"dispP\" src={ require('../Images/profileImage.jpg') } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Proj(){\r\n    return(\r\n        <>\r\n            Here you'll see some of the projects I've worked on.<br></br>\r\n            These links will take you to my GitHub respositories.<br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <a href=\"https://github.com/Nikita-Pietersen/React-game\"><img src={ require('../Images/Game.jpg') } /></a>\r\n            <a href=\"https://github.com/Nikita-Pietersen/weather-app\"><img src={ require('../Images/Weather App.jpg') } /></a>\r\n            <a href=\"https://github.com/Nikita-Pietersen/ShopWebPage\"><img src={ require('../Images/Shop.jpg') } /></a>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Proj;","import React from \"react\";\r\n\r\nfunction Edu(){\r\n    return(\r\n        <div>\r\n            High School : Rylands High School<br></br>\r\n            Year Of Matriculation : 2018<br></br>\r\n            <br></br>\r\n            Subjects:\r\n            <ul>\r\n                <li>Mathematics(pure)</li>\r\n                <li>English Home Language</li>\r\n                <li>Afrikaans First Additional Language</li>\r\n                <li>Life Sciences</li>\r\n                <li>Life Orientation</li>\r\n                <li>Physical Sciences</li>\r\n                <li>Information Technology</li>\r\n            </ul>\r\n            <br></br><br></br>\r\n            Life Choices Academy, Coding course(co grammar/hyperion dev)\r\n            Completion of course : 25th October 2019\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edu;","import React from 'react';\r\nimport {BrowserRouter as Router,Switch,Route,NavLink} from \"react-router-dom\";\r\nimport About from \"./Components/about\";\r\nimport Head from \"./Components/head\";\r\nimport Proj from \"./Components/proj\";\r\nimport Edu from \"./Components/education\";\r\nimport \"./Components/style.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div id=\"DivApp\">\r\n          <Head/>\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li>\r\n                <NavLink\r\n                  to=\"/About\"\r\n                  className=\"nav-link\"\r\n                  activeStyle={{ display: \"none\" }}\r\n                >\r\n                  About Me\r\n                </NavLink>\r\n              </li>\r\n                <li>\r\n                <NavLink\r\n                  to=\"/Edu\"\r\n                  className=\"nav-link\"\r\n                  activeStyle={{ display: \"none\" }}\r\n                >\r\n                  Education\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to=\"/Proj\"\r\n                  className=\"nav-link\"\r\n                  activeStyle={{ display: \"none\" }}\r\n                >\r\n                  Projects\r\n                </NavLink>\r\n                </li>\r\n            </ul>\r\n          </nav>\r\n          <hr />\r\n          <Switch>\r\n            <Route path=\"/About\" component={About} />\r\n            <Route path=\"/Edu\" component={Edu} />\r\n            <Route path=\"/Proj\" component={Proj} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
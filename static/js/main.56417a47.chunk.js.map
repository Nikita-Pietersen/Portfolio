{"version":3,"sources":["Images/profileImage.jpg","Images/Game.jpg","Images/Weather App.jpg","Images/Shop.jpg","Components/about.js","Components/head.js","Components/proj.js","Components/education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Header","id","src","require","Proj","href","Edu","App","className","to","activeStyle","display","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,+GCiC5BC,MA/Bf,WACI,OACI,6BACA,wCACH,iJACgH,6BADhH,kEAE4D,6BAF5D,kGAG4F,6BAH5F,8IAIwI,6BAJxI,oFAK8E,6BAL9E,2FAMqF,6BANrF,wDAOkD,6BAPlD,sFAQgF,6BARhF,qFAS+E,6BAC5E,6BAVH,2BAYG,4BACI,6CACA,8CACA,wCACA,8CACA,+CACA,2CACA,gDCbGC,MAVf,WACI,OACI,yBAAKC,GAAG,QAAR,0BAC2B,6BAD3B,+DAEgE,6BAC5D,yBAAKA,GAAG,QAAQC,IAAMC,EAAQ,QCS3BC,MAdf,WACI,OACI,2FACwD,6BADxD,wDAEyD,6BACrD,6BACA,6BACA,uBAAGC,KAAK,kDAAiD,yBAAKH,IAAMC,EAAQ,OAC5E,uBAAGE,KAAK,mDAAkD,yBAAKH,IAAMC,EAAQ,OAC7E,uBAAGE,KAAK,mDAAkD,yBAAKH,IAAMC,EAAQ,SCc1EG,MAvBf,WACI,OACI,iEACqC,6BADrC,+BAEgC,6BAC5B,6BAHJ,YAKI,4BACI,iDACA,qDACA,mEACA,6CACA,gDACA,iDACA,uDAEJ,6BAAS,6BAdb,0G,MCqDOC,MAjDf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,yBAAKP,GAAG,UACN,kBAAC,EAAD,MACA,yBAAKO,UAAU,iDACb,wBAAIA,UAAU,sBACZ,4BACE,kBAAC,IAAD,CACEC,GAAG,SACHD,UAAU,WACVE,YAAa,CAAEC,QAAS,SAH1B,aAQA,4BACA,kBAAC,IAAD,CACEF,GAAG,OACHD,UAAU,WACVE,YAAa,CAAEC,QAAS,SAH1B,cAQF,4BACE,kBAAC,IAAD,CACEF,GAAG,QACHD,UAAU,WACVE,YAAa,CAAEC,QAAS,SAH1B,eAUN,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWd,IAChC,kBAAC,IAAD,CAAOa,KAAK,OAAOC,UAAWP,IAC9B,kBAAC,IAAD,CAAOM,KAAK,QAAQC,UAAWT,SCrCvBU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.56417a47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileImage.f48fa7c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Game.9ec5f6f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Weather App.3e4f5ace.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Shop.1e1ad4ae.jpg\";","import React from \"react\";\r\n\r\nfunction About(){\r\n    return(\r\n        <div>\r\n        <h2>About Me</h2>\r\n\t    <p>\r\n\t\tMy name is Nikita Pietersen. I am a 19 year old female that matricualted from Rylands High School in the year 2018.<br></br>\r\n\t\tMy hobbies include reading, gaming, playing sports and coding. <br></br>\r\n\t\tMy aspirations are to become a web developer and in the next 5 years to be a senior  developer.<br></br>\r\n\t\tIf I am unable to become a senior developer in five years, I'd still work towards that goal as it is an important goal I've set for myself.<br></br>\r\n\t\tI enjoy learning new langugaes and the fun ways that I am able to implement them.<br></br>\r\n\t\tI enjoy designing web pages and making the pages look lively and aesthetically pleasing.<br></br>\r\n\t\tMy favourites languages are HTML, CSS and Javascript.<br></br>\r\n\t\tI favour challenges that I know will require dedication and proper time management.<br></br>\r\n\t\tI am the type of person that will push myself to learn as much as I can as I work.<br></br>\r\n        <br></br>\r\n        My soft skills include :\r\n        <ul>\r\n            <li>Communication</li>\r\n            <li>Self-Motivated</li>\r\n            <li>Teamwork</li>\r\n            <li>Responsibility</li>\r\n            <li>Problem Solving</li>\r\n            <li>Flexibility</li>\r\n            <li>Adaptability</li>\r\n        </ul>\r\n\t    </p>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nfunction Header(){\r\n    return(\r\n        <div id=\"head\">\r\n            Nikita Nicole Pietersen<br></br>\r\n            Here you'll find out about me, my projects and my education.<br></br>\r\n            <img id=\"dispP\" src={ require('../Images/profileImage.jpg') } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Proj(){\r\n    return(\r\n        <>\r\n            Here you'll see some of the projects I've worked on.<br></br>\r\n            These links will take you to my GitHub respositories.<br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <a href=\"https://github.com/Nikita-Pietersen/React-game\"><img src={ require('../Images/Game.jpg') } /></a>\r\n            <a href=\"https://github.com/Nikita-Pietersen/weather-app\"><img src={ require('../Images/Weather App.jpg') } /></a>\r\n            <a href=\"https://github.com/Nikita-Pietersen/ShopWebPage\"><img src={ require('../Images/Shop.jpg') } /></a>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Proj;","import React from \"react\";\r\n\r\nfunction Edu(){\r\n    return(\r\n        <div>\r\n            High School : Rylands High School<br></br>\r\n            Year Of Matriculation : 2018<br></br>\r\n            <br></br>\r\n            Subjects:\r\n            <ul>\r\n                <li>Mathematics(pure)</li>\r\n                <li>English Home Language</li>\r\n                <li>Afrikaans First Additional Language</li>\r\n                <li>Life Sciences</li>\r\n                <li>Life Orientation</li>\r\n                <li>Physical Sciences</li>\r\n                <li>Information Technology</li>\r\n            </ul>\r\n            <br></br><br></br>\r\n            Life Choices Academy, Coding course(co grammar/hyperion dev)\r\n            Completion of course : 25th October 2019\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edu;","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route,NavLink} from \"react-router-dom\";\nimport About from \"./Components/about\";\nimport Head from \"./Components/head\";\nimport Proj from \"./Components/proj\";\nimport Edu from \"./Components/education\";\nimport \"./Components/style.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div id=\"DivApp\">\n          <Head/>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li>\n                <NavLink\n                  to=\"/About\"\n                  className=\"nav-link\"\n                  activeStyle={{ display: \"none\" }}\n                >\n                  About Me\n                </NavLink>\n              </li>\n                <li>\n                <NavLink\n                  to=\"/Edu\"\n                  className=\"nav-link\"\n                  activeStyle={{ display: \"none\" }}\n                >\n                  Education\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"/Proj\"\n                  className=\"nav-link\"\n                  activeStyle={{ display: \"none\" }}\n                >\n                  Projects\n                </NavLink>\n                </li>\n            </ul>\n          </nav>\n          <hr />\n          <Switch>\n            <Route path=\"/About\" component={About} />\n            <Route path=\"/Edu\" component={Edu} />\n            <Route path=\"/Proj\" component={Proj} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}